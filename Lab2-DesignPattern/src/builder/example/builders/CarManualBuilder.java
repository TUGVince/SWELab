package builder.example.builders;

import builder.example.cars.Manual;
import builder.example.cars.CarType;
import builder.example.components.Engine;
import builder.example.components.GPSNavigator;
import builder.example.components.Transmission;
import builder.example.components.TripComputer;

/**
 * EN: Unlike other creational patterns, Builder can construct unrelated
 * products, which don't have the common interface.
 *
 * In this case we build a user manual for a car, using the same steps as we
 * built a car. This allows to produce manuals for specific car models,
 * configured with different features.
 *
 * RU: –í –æ—Ç–ª–∏—á–∏–µ –æ—Ç –¥—Ä—É–≥–∏—Ö —?–æ–∑–¥–∞—é—â–∏—Ö –ø–∞—Ç—Ç–µ—Ä–Ω–æ–≤, –°—Ç—Ä–æ–∏—Ç–µ–ª–∏ –º–æ–≥—É—Ç —?–æ–∑–¥–∞–≤–∞—Ç—å
 * —?–æ–≤–µ—Ä—à–µ–Ω–Ω–æ —Ä–∞–∑–Ω—ã–µ –ø—Ä–æ–¥—É–∫—Ç—ã, –Ω–µ –∏–º–µ—é—â–∏–µ –æ–±—â–µ–≥–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—?–∞.
 *
 * –í –¥–∞–Ω–Ω–æ–º —?–ª—É—á–∞–µ –º—ã –ø—Ä–æ–∏–∑–≤–æ–¥–∏–º —Ä—É–∫–æ–≤–æ–¥—?—Ç–≤–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—? –∞–≤—Ç–æ–º–æ–±–∏–ª—? —? –ø–æ–º–æ—â—å—é
 * —Ç–µ—Ö –∂–µ —à–∞–≥–æ–≤, —á—Ç–æ –∏ —?–∞–º–∏ –∞–≤—Ç–æ–º–æ–±–∏–ª–∏. –≠—Ç–æ —É—?—Ç—Ä–æ–π—?—Ç–≤–æ –ø–æ–∑–≤–æ–ª–∏—Ç —?–æ–∑–¥–∞–≤–∞—Ç—å
 * —Ä—É–∫–æ–≤–æ–¥—?—Ç–≤–∞ –ø–æ–¥ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –º–æ–¥–µ–ª–∏ –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π, —?–æ–¥–µ—Ä–∂–∞—â–∏–µ —Ç–µ –∏–ª–∏ –∏–Ω—ã–µ —Ñ–∏—á–∏.
 */
public class CarManualBuilder implements Builder{
    private CarType type;
    private int seats;
    private Engine engine;
    private Transmission transmission;
    private TripComputer tripComputer;
    private GPSNavigator gpsNavigator;

    @Override
    public void setCarType(CarType type) {
        this.type = type;
    }

    @Override
    public void setSeats(int seats) {
        this.seats = seats;
    }

    @Override
    public void setEngine(Engine engine) {
        this.engine = engine;
    }

    @Override
    public void setTransmission(Transmission transmission) {
        this.transmission = transmission;
    }

    @Override
    public void setTripComputer(TripComputer tripComputer) {
        this.tripComputer = tripComputer;
    }

    @Override
    public void setGPSNavigator(GPSNavigator gpsNavigator) {
        this.gpsNavigator = gpsNavigator;
    }

    public Manual getResult() {
        return new Manual(type, seats, engine, transmission, tripComputer, gpsNavigator);
    }
}
